# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        id: cache-composer
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - name: Run composer install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
      - name: Generate key
        run: php artisan key:generate

      - name: Create sqlite database
        run: touch database/database.sqlite

      - name: Migrate
        run: php artisan migrate:fresh --seed --seeder=TestSeeder

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-

      - name: Install node dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: NPM build
        run: npm run build

      - name: Zip files
        run: zip -r php-app.zip .* -x ".git/*" -x "node_modules/*"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: php-app.zip
          path: php-app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: php-app.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        env:
          ACTIONS_STEP_DEBUG: true
          ACTIONS_RUNNER_DEBUG: true
        with:
          app-name: 'ezems'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E653E2C3AAF3477FA37B6C60AEEA18D4 }}
          package: php-app.zip
